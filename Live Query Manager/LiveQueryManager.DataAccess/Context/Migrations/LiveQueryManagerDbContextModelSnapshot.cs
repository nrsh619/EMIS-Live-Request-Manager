// <auto-generated />
using System;
using LiveQueryManager.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LiveQueryManager.DataAccess.Context.Migrations
{
    [DbContext(typeof(LiveQueryManagerDbContext))]
    partial class LiveQueryManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LiveQueryManager.DataAccess.Map.AttachmentTypeWrapper", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("AttachmentId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Description");

                    b.HasKey("Id")
                        .HasName("PK_AttachmentType_AttachmentId");

                    b.ToTable("AttachmentType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Request"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Response"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Error"
                        });
                });

            modelBuilder.Entity("LiveQueryManager.DataAccess.Map.StatusWrapper", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("StatusId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Description");

                    b.HasKey("Id")
                        .HasName("PK_Status_StatusId");

                    b.ToTable("Status", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Created"
                        },
                        new
                        {
                            Id = 2,
                            Description = "InProgress"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Completed"
                        });
                });

            modelBuilder.Entity("LiveQueryManager.Models.Models.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("AttachmentId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("AttachmentType");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("Attachment", (string)null);
                });

            modelBuilder.Entity("LiveQueryManager.Models.Models.LiveDataRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RequestId"));

                    b.Property<string>("AssignedTo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreationDateTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastUpdatedDateTime");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("StatusId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("RequestId")
                        .HasName("PK_LiveDataRequest_RequestId");

                    b.ToTable("LiveDataRequests");
                });

            modelBuilder.Entity("LiveQueryManager.Models.Models.Attachment", b =>
                {
                    b.HasOne("LiveQueryManager.Models.Models.LiveDataRequest", "LiveDataRequest")
                        .WithMany("Attachments")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Attachment_LiveDataRequest_RequestId");

                    b.Navigation("LiveDataRequest");
                });

            modelBuilder.Entity("LiveQueryManager.Models.Models.LiveDataRequest", b =>
                {
                    b.Navigation("Attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
